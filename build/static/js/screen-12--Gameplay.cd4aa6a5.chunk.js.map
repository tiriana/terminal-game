{"version":3,"sources":["_OLD/components/lib/sounds.js","_OLD/components/Cursor/index.jsx","_OLD/components/NameInput/index.jsx","_OLD/components/Cursor/styles.module.scss","_OLD/resources/audio/TYPE.mp3","_OLD/resources/audio/wrong_letter.mp3","_OLD/resources/audio/1beep.mp3","_OLD/resources/audio/CorrectAnswer.mp3","_OLD/resources/audio/SkipQuestion.mp3","_OLD/components/CRT/backgroundListener.js","_OLD/api/mock/game.js","components/Clock/Countdown.module.scss","_OLD/App.js","_OLD/resources/audio/Lost_Years_-_West_Side_Lane_(Mega_Drive-Genesis_Arrange).mp3","_OLD/resources/audio/TimeEnd_explosion.mp3","_OLD/components/scenes/Main/AnswerTiles.module.scss","_OLD/components/Clock/styles.module.scss","_OLD/components/scenes/Main/mainScene.module.scss","_OLD/resources/img/happyface.png","_OLD/resources/img/end_explosion.png","_OLD/resources/img/pggbomb_logo.png","_OLD/components/scenes/Leaderboard/leaderboard.module.scss","_OLD/components/CRT/index.jsx","_OLD/components/CRT/styles.global.less","_OLD/components/lib/music.js","_OLD/consts.js","_OLD/components/API.propType.js","_OLD/components/Loading/index.jsx","_OLD/components/scenes/Menu.jsx","_OLD/components/KeyboardListener/OnKeydown.jsx","_OLD/components/KeyboardListener/OnAlphanumerical.jsx","_OLD/components/scenes/Main/AnswerTiles.jsx","_OLD/components/KeyboardListener/OnSpecial.jsx","_OLD/components/KeyboardListener/OnEnter.jsx","_OLD/components/Clock/index.jsx","_OLD/components/lib/BombTimer.js","_OLD/components/scenes/Main/index.jsx","_OLD/components/scenes/Win.jsx","_OLD/components/scenes/Lose.jsx","_OLD/components/MultiKeyInput/index.jsx","_OLD/components/scenes/Idle.jsx","_OLD/components/scenes/Leaderboard/index.jsx","_OLD/components/Game.jsx","components/Clock/Countdown.jsx","components/screens/Gameplay/index.jsx","components/screens/UnderConstruction/UnderConstruction.jsx"],"names":["__webpack_require__","d","__webpack_exports__","playTypingSound","playWrongLetterSound","playBeep","playCorrectAnswerSound","playSkippedQuestionSound","howler__WEBPACK_IMPORTED_MODULE_0__","_resources_audio_TYPE_mp3__WEBPACK_IMPORTED_MODULE_1__","_resources_audio_TYPE_mp3__WEBPACK_IMPORTED_MODULE_1___default","n","_resources_audio_wrong_letter_mp3__WEBPACK_IMPORTED_MODULE_2__","_resources_audio_wrong_letter_mp3__WEBPACK_IMPORTED_MODULE_2___default","_resources_audio_1beep_mp3__WEBPACK_IMPORTED_MODULE_3__","_resources_audio_1beep_mp3__WEBPACK_IMPORTED_MODULE_3___default","_resources_audio_CorrectAnswer_mp3__WEBPACK_IMPORTED_MODULE_4__","_resources_audio_CorrectAnswer_mp3__WEBPACK_IMPORTED_MODULE_4___default","_resources_audio_SkipQuestion_mp3__WEBPACK_IMPORTED_MODULE_5__","_resources_audio_SkipQuestion_mp3__WEBPACK_IMPORTED_MODULE_5___default","play","soundTyping","wrongLetter","beep","correctAnswer","skippedQuestion","howls","base64","Howl","src","concat","loop","preload","getHowl","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_styles_module_scss__WEBPACK_IMPORTED_MODULE_1__","_styles_module_scss__WEBPACK_IMPORTED_MODULE_1___default","Cursor","a","createElement","className","styles","blinker","keycode","require","NameInput","_getPrototypeOf2","_this","Object","_home_egnyte_dev_pgg_terminal_game_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_len","arguments","length","args","Array","_key","_home_egnyte_dev_pgg_terminal_game_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_egnyte_dev_pgg_terminal_game_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","apply","onKeyPressed","e","props","keyCode","onEnter","state","name","setState","slice","onEscapePress","char","test","toUpperCase","document","addEventListener","removeEventListener","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","onKeyDown","event","_Cursor__WEBPACK_IMPORTED_MODULE_6__","React","Component","module","exports","p","callbacks","STATES","forEach","cb","onChanged","push","setNormal","setWarning","setDanger","r","createSession","getNextQuestion","saveGoodAnswer","saveBadAnswer","skipQuestion","saveWinGame","saveLoseGame","getLeaderboard","numOfSessions","questionsMock","id","question","answer","leaderBoard","playerId","playerName","result","answered","questionsLeftInSession","_ref","Promise","resolve","reject","setTimeout","startsWith","response","status","data","errorDesc","sort","Math","random","sessionId","_ref2","pop","_ref3","questionId","_ref4","_ref5","_ref6","score","_ref7","countdown","number","zoomin","_components_Game__WEBPACK_IMPORTED_MODULE_1__","_api_mock_game__WEBPACK_IMPORTED_MODULE_3__","react_hot_loader__WEBPACK_IMPORTED_MODULE_4__","hot","api","letter","empty","wordWrapper","word","incorrect","timer","red","blue","clockWrapper","timeDiff","fadeOut","categoryName","questionContent","points","description","wrapper","playerScore","clear","scoreTitle","nowPlaying","SCENES","MENU","MAIN","LOSE","WIN","LEADERBOARD","IDLE","PropTypes","shape","func","isRequired","MAX_STEPS","Loading","classCallCheck","possibleConstructorReturn","getPrototypeOf","incrementStep","step","react_default","dist","size","color","undefined","hackingTime","timeEndExplosion","stop","playOnce","header","fontSize","error","textShadow","Menu","Fragment","style","onNameEntered","OnKeydown","onKeydown","callback","OnAlphanumerical","KeyboardListener_OnKeydown","Letter","onLetter","removeDiacritics","expected","onCorrect","onIncorrect","visible","join","hasFocus","KeyboardListener_OnAlphanumerical","defaultProps","AnswerTiles","renderLettersTiles","letters","renderedAnswer","split","map","idx","key","letterIdx","AnswerTiles_Letter","visibleLetters","incorrectLetterIndex","incorrectLetter","isCorrectAnswer","canType","focusedLetter","toConsumableArray","onWrongLetter","prevProps","prevState","snapshot","onCorrectAnswer","OnSpecial","OnEnter","KeyboardListener_OnSpecial","pad","len","String","Timer","timeLeftMS","warningZone","minutes","seconds","milliseconds","STATUS","BombTimer","time","_ref$tickMS","tickMS","_ref$almostDoneMS","almostDoneMS","maxTimeLimit","console","log","_createStopwatch","_stopwatch","onTime","removeAllListeners","onAlmostDone","onDone","start","ms","refreshRateMS","Stopwatch","timeDiffMS","isDone","reset","isRunning","emit","doneFired","EVENTS","TICK","ALMOST_DONE","DONE","Main","tick","timeLeft","backgroundListener","changeTimeLeft","diff","indicateTimeDiff","changeTime","assertThisInitialized","wrongAnswerPenalty","onWrongAnswer","diffNotificationId","removeTimeDiffNotification","addTimeDiffNotification","timeDiffs","objectSpread","loading","correctAnswerAnimation","then","timeShift","totalScore","loadQuestion","onNoMoreQuestions","questionText","wrongLettersGiven","onWin","onSkipAnswer","renderTimeDiffNotifications","keys","timeDiffId","sign","maxWrongLetters","correctAnswerReward","skipQuestionPenalty","tickingSound","setInterval","unbindTick","clearInterval","onTick","onLose","_this3","questionGetter","category","catch","errorCode","Clock","Main_AnswerTiles","KeyboardListener_OnEnter","components_Loading","happyface","titleStyle","marginBotton","marginTop","imgStyle","height","Win","skipSceneDisabled","onAnyKeyPressed","exec","getPlayerId","alt","explosionImage","Lose","MultiKeyInput","requiredKeyCodes","requiredKeyCode","onRequiredKeyPress","logo","Idle","onEnterOrSpacePress","components_MultiKeyInput","Leaderboard","index","SESSION_TIME","IDLE_MAX_TIME","Game","scene","idleTimer","errorMessage","timeLimit","correctAnswerTimeReward","wrongAnswerTimePenalty","skipAnswerTimePenalty","sessionTime","skipAnswerPenalty","onIdleEnterOrSpacePress","button","onEnterPress","onSpacePress","onLoseSceneAnyKeyPress","onWinSceneAnyKeyPress","onLeaderboardSceneAnyKeyPress","idleMaxTime","currentScene","idleTime","getElapsedTime","index_es","ref","onActive","onIdle","timeout","startOnLoad","scenes_Win","scenes_Lose","scenes_Menu","scenes_Main","scenes_Idle","scenes_Leaderboard","Countdown","_ref$seconds","_ref$onFinished","onFinished","useRef","_useState","useState","_useState2","slicedToArray","secondsLeft","setSecondsLeft","_useState3","_useState4","finished","setFinished","useCallback","useEffect","current","Text","animationIterationCount","countingdown","setCountingdown","Screen","App","title","history","rest","_home_egnyte_dev_pgg_terminal_game_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","components_Input_Keyboard_KeyboardEventHandler__WEBPACK_IMPORTED_MODULE_5__","onKeyEvent","_Screen_Screen__WEBPACK_IMPORTED_MODULE_3__","components_Text_Text__WEBPACK_IMPORTED_MODULE_4__","JSON","stringify","position","left","opacity","components_Jargon_Jargon__WEBPACK_IMPORTED_MODULE_2__","maxLines"],"mappings":"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","file":"static/js/screen-12--Gameplay.cd4aa6a5.chunk.js","sourcesContent":["import { Howl, Howler } from \"howler\";\nimport soundTyping from \"../../resources/audio/TYPE.mp3\";\nimport wrongLetter from \"../../resources/audio/wrong_letter.mp3\";\nimport beep from \"../../resources/audio/1beep.mp3\";\nimport correctAnswer from \"../../resources/audio/CorrectAnswer.mp3\";\nimport skippedQuestion from \"../../resources/audio/SkipQuestion.mp3\"\n\nexport const playTypingSound = () => play(soundTyping);\nexport const playWrongLetterSound = () => play(wrongLetter);\nexport const playBeep = () => play(beep);\nexport const playCorrectAnswerSound = () => play(correctAnswer);\nexport const playSkippedQuestionSound = () => play(skippedQuestion);\n\nconst howls = {};\nconst getHowl = base64 => {\n  if (!howls[base64]) {\n    howls[base64] = new Howl({\n      src: [base64, `data:audio/mp3;base64,${base64}`],\n      loop: false,\n      preload: true\n    });\n  }\n\n  return howls[base64];\n}\nconst play = base64 => {\n  getHowl(base64).play();\n};\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\n\nconst Cursor = () => <span className={styles.blinker}>█</span>;\n\nexport default Cursor;\n","import React from \"react\";\nimport Cursor from \"../Cursor\";\n\nimport { playTypingSound } from \"../lib/sounds\";\n\nconst keycode = require(\"keycode\");\n\nclass NameInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.onKeyPressed);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyPressed);\n  }\n\n  onKeyPressed = e => {\n    this.props.onKeyPressed && this.props.onKeyPressed(e);\n\n    if (keycode(\"enter\") === e.keyCode) {\n      this.props.onEnter(this.state.name);\n      playTypingSound();\n    }\n    if (keycode(\"backspace\") === e.keyCode && this.state.name.length > 0) {\n      playTypingSound();\n      return this.setState(state => ({\n        name: state.name.slice(0, -1),\n      }));\n    }\n\n    if (keycode(e.keyCode) === \"esc\") {\n      playTypingSound();\n      this.props.onEscapePress();\n    }\n\n    let char = keycode(e.keyCode);\n    if (keycode(e.keyCode) === \"space\") {\n      char = \" \";\n    }\n\n    if (/[ 0-9a-z]/.test(char) && char.length === 1) {\n      playTypingSound();\n      return this.setState(state => ({\n        name: (state.name + char.toUpperCase()).slice(0, 20),\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <span onKeyDown={event => this.onKeyDown(event)}>\n        {this.state.name}\n        <Cursor />\n      </span>\n    );\n  }\n}\n\nexport default NameInput;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blinker\":\"styles_blinker__1UIID\"};","module.exports = __webpack_public_path__ + \"static/media/TYPE.eaabe2f1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong_letter.b23be0a5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1beep.cbfc1bc3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/CorrectAnswer.ae5b2a24.mp3\";","module.exports = __webpack_public_path__ + \"static/media/SkipQuestion.05e50d7d.mp3\";","const callbacks = [];\n\nexport const onChanged = cb => callbacks.push(cb);\nexport const reset = () => {\n  while (callbacks.length) { callbacks.pop(); }\n}\n\nconst STATES = {\n  NORMAL: \"\",\n  WARNING: \"warning\",\n  DANGER: \"danger\"\n};\n\nconst setState = state => callbacks.forEach(cb => cb(state));\n\nexport const setNormal = () => setState(STATES.NORMAL);\nexport const setWarning = () => setState(STATES.WARNING);\nexport const setDanger = () => setState(STATES.DANGER);\n\nexport default {\n  onChanged, setNormal, setWarning, setDanger\n}\n","let numOfSessions = 0;\n\nconst questionsMock = [\n  {\n    id: 1,\n    question: \"Słownie 1 + 1\",\n    answer: \"DWA\",\n  },\n  {\n    id: 2,\n    question: \"Słownie 1 + 2\",\n    answer: \"TRZY\",\n  },\n  {\n    id: 3,\n    question: \"Dwa wyrazy\",\n    answer: \"Dwa wyrazy\",\n  },\n  {\n    id: 4,\n    question: \"Wpisz aż pięć wyrazów\",\n    answer: \"Wpisz aż pięć wyrazów\",\n  },\n  {\n    id: 5,\n    question: \"Twoja stara je\",\n    answer: \"Banana\",\n  },\n  {\n    id: 6,\n    question: \"Najdłuższe polskie słowo\",\n    answer: \"Nie znam\",\n  },\n];\n\nconst leaderBoard = [\n  {\n    playerId: \"3211\",\n    playerName: \"Staszek\",\n    result: 12343,\n    answered: 15,\n  },\n  {\n    playerId: \"3211\",\n    playerName: \"Zdzisiek\",\n    result: 4312,\n    answered: 3,\n  },\n  {\n    playerId: \"3211\",\n    playerName: \"stefan\",\n    result: 33123,\n    answered: 54,\n  },\n];\n\nconst questionsLeftInSession = {};\n\nexport const createSession = ({ playerName }) =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (playerName.startsWith(\"A\")) {\n        return reject({\n          response: {\n            status: 400,\n            data: {\n              errorDesc: \"Taki gracz już istnieje. To jest API MOCK. Użyj imienia nie na 'A'\",\n            },\n          },\n        });\n      }\n\n      ++numOfSessions;\n      questionsLeftInSession[numOfSessions] = [...questionsMock].sort(Math.random);\n      resolve({ sessionId: numOfSessions });\n    }, 5000);\n  });\n\nexport const getNextQuestion = ({ sessionId }) =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve(questionsLeftInSession[numOfSessions].pop());\n    }, 500);\n  });\n\nexport const saveGoodAnswer = ({ sessionId, questionId }) =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 500);\n  });\n\nexport const saveBadAnswer = ({ sessionId, questionId }) =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 500);\n  });\n\nexport const skipQuestion = ({ sessionId, questionId }) =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 500);\n  });\n\nexport const saveWinGame = ({ sessionId, score }) =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 500);\n  });\n\nexport const saveLoseGame = ({ sessionId, score }) =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 500);\n  });\n\nexport const getLeaderboard = () =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve({ leaderBoard: leaderBoard });\n    }, 500);\n  });\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countdown\":\"Countdown_countdown__724C8\",\"number\":\"Countdown_number__1xJDd\",\"zoomin\":\"Countdown_zoomin__3XDkm\"};","import React from \"react\";\nimport Game from \"./components/Game\";\nimport CRT from \"./components/CRT\";\nimport * as api from \"./api/mock/game\";\n// import * as api from \"./api/game\";\nimport { hot } from \"react-hot-loader\";\n\nconst App = () => <Game api={api} />;\n\nexport default hot(module)(App);\n","module.exports = __webpack_public_path__ + \"static/media/Lost_Years_-_West_Side_Lane_(Mega_Drive-Genesis_Arrange).a2b0b3f3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/TimeEnd_explosion.2ffbe1ac.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"letter\":\"AnswerTiles_letter__1cg5z\",\"empty\":\"AnswerTiles_empty__2qPhD\",\"wordWrapper\":\"AnswerTiles_wordWrapper__1bbOx\",\"word\":\"AnswerTiles_word__2pUch\",\"incorrect\":\"AnswerTiles_incorrect__3gadw\",\"blinker\":\"AnswerTiles_blinker__2SXwq\",\"correctAnswer\":\"AnswerTiles_correctAnswer__aVS2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"styles_timer__38hEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"mainScene_red__118Yx\",\"blue\":\"mainScene_blue__39u8Q\",\"clockWrapper\":\"mainScene_clockWrapper__2WEpI\",\"timeDiff\":\"mainScene_timeDiff__h_7Q2\",\"fadeOut\":\"mainScene_fadeOut__nQy1j\",\"categoryName\":\"mainScene_categoryName__26Bo7\",\"questionContent\":\"mainScene_questionContent__2rPGz\",\"points\":\"mainScene_points__1eEMy\",\"description\":\"mainScene_description__3Jj5h\"};","module.exports = __webpack_public_path__ + \"static/media/happyface.1f3e9da8.png\";","module.exports = __webpack_public_path__ + \"static/media/end_explosion.03bbbe6e.png\";","module.exports = __webpack_public_path__ + \"static/media/pggbomb_logo.d7406a87.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"leaderboard_wrapper__1Qhgy\",\"playerName\":\"leaderboard_playerName__Eu2J4\",\"playerScore\":\"leaderboard_playerScore__3dI2Y\",\"clear\":\"leaderboard_clear__3zYHs\",\"scoreTitle\":\"leaderboard_scoreTitle__1ZpHj\"};","import React from \"react\";\nimport \"./styles.global.less\";\nimport backgroundListener from \"./backgroundListener\";\n\nclass CRT extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      outputClass: \"\"\n    }\n  }\n\n  componentDidMount() {\n    backgroundListener.onChanged(this.onBackgroundChanged);\n  }\n\n  onBackgroundChanged = outputClass => {\n    this.setState({ outputClass });\n  }\n\n  componentWillUnmount() {\n    backgroundListener.reset();\n  }\n\n  render() {\n    return <div className=\"noisy\">\n      <div className=\"frame\">\n        <div className={ `piece output ${this.state.outputClass}` }>\n          <div className=\"main-container\">\n            { this.props.children }\n          </div>\n          <div className=\"piece scanlines noclick\" />\n          <div className=\"piece glow noclick\" />\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default CRT;\n","module.exports = __webpack_public_path__ + \"static/media/styles.global.caa5ffc3.less\";","import { Howl, Howler } from \"howler\";\nimport hackingTime from \"../../resources/audio/Lost_Years_-_West_Side_Lane_(Mega_Drive-Genesis_Arrange).mp3\";\nimport timeEndExplosion from \"../../resources/audio/TimeEnd_explosion.mp3\";\n\nexport const playHackingTime = () => play(hackingTime);\nexport const playMachineSound = () => null;\nexport const playTimeEndExplosionSound = () => playOnce(timeEndExplosion);\n\nconst howls = {};\nconst getHowl = (base64, loop = true) => {\n  if (!howls[base64]) {\n    howls[base64] = new Howl({\n      src: [base64, `data:audio/mp3;base64,${base64}`],\n      loop: loop,\n      preload: true\n    });\n  }\n\n  return howls[base64];\n}\n\n//preload\ngetHowl(hackingTime);\ngetHowl(timeEndExplosion, false);\n\nlet nowPlaying;\n\nconst play = base64 => {\n  if (nowPlaying === base64) {\n    return;\n  }\n  if (nowPlaying) {\n    getHowl(nowPlaying).stop();\n  }\n  getHowl(base64).play();\n\n  nowPlaying = base64;\n};\n\nconst playOnce = base64 => {\n  if (nowPlaying === base64) {\n    return;\n  }\n  if (nowPlaying) {\n    getHowl(nowPlaying).stop();\n  }\n  getHowl(base64, false).play();\n\n\n\n  nowPlaying = base64;\n};\n","export const SCENES = {\n  MENU: \"MENU\",\n  MAIN: \"MAIN\",\n  LOSE: \"LOSE\",\n  WIN: \"WIN\",\n  LEADERBOARD: \"LEADERBOARD\",\n  IDLE: \"IDLE\"\n};\n","import PropTypes from \"prop-types\";\n\nconst APIPropType = PropTypes.shape({\n  createSession: PropTypes.func.isRequired,\n  getNextQuestion: PropTypes.func.isRequired,\n  saveGoodAnswer: PropTypes.func.isRequired,\n  saveBadAnswer: PropTypes.func.isRequired,\n  skipQuestion: PropTypes.func.isRequired,\n  saveWinGame: PropTypes.func.isRequired,\n  saveLoseGame: PropTypes.func.isRequired,\n  getLeaderboard: PropTypes.func.isRequired\n});\n\nexport default APIPropType;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nimport { BarLoader } from 'react-spinners';\n\nconst SPPINNER = \"|/-\\\\\";\nconst MAX_STEPS = SPPINNER.length;\n\nclass Loading extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      step: 0\n    };\n  }\n\n  componentWillMount() {\n    // this.intereval = setInterval(this.incrementStep, 200);\n  }\n\n  componentWillUnmount() {\n    // clearInterval(this.intereval);\n  }\n\n  incrementStep = () => {\n    this.setState(state => {\n      return {\n        step: (state.step + 1) % MAX_STEPS\n      };\n    });\n  };\n\n  render() {\n    return <BarLoader size={ 25 } color={'#14fdce'} />;\n  }\n}\n\nexport default Loading;\n","import React from \"react\";\nimport NameInput from \"../NameInput\";\nimport { playMachineSound } from \"../lib/music\";\n\n\nconst header = {\n  fontSize: '5rem'\n}\n\nconst description = {\n  fontSize: '37px'\n}\n\nconst error = {\n  color: '#ff2a2a',\n  textShadow: '0rem 0.2rem 1rem #ff4a15',\n  fontSize: '49px'\n}\n\nclass Menu extends React.Component {\n  componentWillMount() {\n    playMachineSound();\n    this.setState({\n      errorDesc: \"\"\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 style={header}>LOADING PROGRAM: PGG BOMB</h1>\n        <p style={description}>Witaj podróżniku. Zagrajmy w grę...</p>\n\n        <div style={description}>\n          Podaj swoje imię: <NameInput onEnter={this.props.onNameEntered}  onEscapePress={this.props.onEscapePress}/>\n        </div>\n        {this.props.errorDesc.length > 0 &&\n          <div style={error}>\n            {this.props.errorDesc}\n          </div>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Menu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass OnKeydown extends React.Component {\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.onKeydown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeydown);\n  }\n\n  static propTypes = {\n    callback: PropTypes.func.isRequired\n  };\n\n  onKeydown = e => this.props.callback(e);\n\n  render() {\n    return null;\n  }\n}\n\nexport default OnKeydown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport OnKeydown from \"./OnKeydown\";\nconst keycode = require(\"keycode\");\n\nconst OnAlphanumerical = ({ callback }) => (\n  <OnKeydown\n    callback={e => {\n      let char = keycode(e.keyCode);\n      if (/[0-9a-z]/i.test(char) && char.length === 1) {\n        callback(char);\n      }\n    }}\n  />\n);\n\nOnAlphanumerical.propTypes = {\n  callback: PropTypes.func.isRequired\n};\n\nexport default OnAlphanumerical;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport OnAlphanumerical from \"../../KeyboardListener/OnAlphanumerical\";\nimport styles from \"./AnswerTiles.module.scss\";\nimport { remove as removeDiacritics } from \"diacritics\";\n\nimport { playTypingSound, playWrongLetterSound } from \"../../lib/sounds\";\n\nclass Letter extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    expected: PropTypes.string.isRequired,\n    visible: PropTypes.bool,\n    hasFocus: PropTypes.bool.isRequired,\n    incorrect: PropTypes.bool,\n    onCorrect: PropTypes.func.isRequired,\n    onIncorrect: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    visible: false,\n    incorrect: false,\n  };\n\n  onLetter = letter => {\n    letter = removeDiacritics(letter.toUpperCase());\n    const expected = removeDiacritics(this.props.expected.toUpperCase());\n    if (letter === expected) {\n      this.props.onCorrect(letter);\n    } else {\n      this.props.onIncorrect(letter);\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className={[\n          styles.letter,\n          this.props.incorrect && styles.incorrect,\n          !this.props.incorrect && !this.props.visible && styles.empty,\n        ].join(\" \")}\n      >\n        {this.props.incorrect || (this.props.visible && this.props.expected.toUpperCase()) || \".\"}\n        {this.props.hasFocus && <OnAlphanumerical callback={this.onLetter} />}\n      </div>\n    );\n  }\n}\n\nclass AnswerTiles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canType: true,\n      focusedLetter: 0,\n      visibleLetters: [],\n      incorrectLetterIndex: null,\n      incorrectLetter: \"\",\n      isCorrectAnswer: false,\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.isCorrectAnswer === false && this.state.isCorrectAnswer === true) {\n      this.props.onCorrectAnswer();\n    }\n  }\n\n  renderLettersTiles = () => {\n    let letters = 0;\n\n    var renderedAnswer = this.props.correctAnswer.split(\" \").map((word, idx) => (\n      <div className={styles.word} key={`word_${idx}`}>\n        {word.split(\"\").map(letter => {\n          let letterIdx = letters++;\n          return (\n            <Letter\n              key={`letter_${letterIdx}`}\n              expected={letter}\n              visible={!!this.state.visibleLetters[letterIdx]}\n              incorrect={letterIdx === this.state.incorrectLetterIndex && this.state.incorrectLetter}\n              hasFocus={!this.state.isCorrectAnswer && this.state.canType && this.state.focusedLetter === letterIdx}\n              onCorrect={letter => {\n                playTypingSound();\n                this.setState(state => {\n                  const visibleLetters = [...state.visibleLetters];\n                  visibleLetters[letterIdx] = letter;\n\n                  return {\n                    visibleLetters,\n                    focusedLetter: state.focusedLetter + 1,\n                    isCorrectAnswer: state.focusedLetter === letters - 1,\n                  };\n                });\n              }}\n              onIncorrect={letter => {\n                playWrongLetterSound();\n                this.props.onWrongLetter();\n                this.setState(\n                  {\n                    canType: false,\n                    incorrectLetterIndex: letterIdx,\n                    incorrectLetter: letter,\n                  },\n                  () => {\n                    setTimeout(() => {\n                      this.setState({\n                        canType: true,\n                        incorrectLetterIndex: null,\n                        incorrectLetter: \"\",\n                      });\n                    }, 500);\n                  }\n                );\n              }}\n            />\n          );\n        })}\n      </div>\n    ));\n\n    return <div className={styles.wordWrapper}>{renderedAnswer}</div>;\n  };\n\n  render() {\n    return <div className={[this.state.isCorrectAnswer && styles.correctAnswer]}>{this.renderLettersTiles()}</div>;\n  }\n\n  static propTypes = {\n    correctAnswer: PropTypes.string.isRequired,\n    onWrongLetter: PropTypes.func.isRequired,\n    onCorrectAnswer: PropTypes.func.isRequired,\n  };\n}\n\nexport default AnswerTiles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport OnKeydown from \"./OnKeydown\";\n\nconst OnSpecial = ({ callback, keyCode }) => (\n  <OnKeydown callback={e => e.keyCode === keyCode && callback()} />\n);\n\nOnSpecial.propTypes = {\n  callback: PropTypes.func.isRequired\n};\n\nexport default OnSpecial;\n","import React from \"react\";\nimport OnSpecial from \"./OnSpecial\";\n\nconst OnEnter = ({ callback }) => (\n  <OnSpecial callback={callback} keyCode={13} />\n);\n\nexport default OnEnter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./styles.module.scss\";\n\nconst pad = (number, len) => String([...Array(len + 1)].join(\"0\") + number).slice(-len);\n\nclass Timer extends React.Component {\n  static propTypes = {\n    timeLeftMS: PropTypes.number.isRequired,\n    warningZoneMS: PropTypes.number,\n  };\n\n  static defaultProps = {\n    warningZone: 10000,\n  };\n\n  render() {\n    const isWarningZone = this.props.timeLeftMS < this.props.warningZone * 1000;\n    const minutes = this.props.timeLeftMS / 1000 / 60;\n    const seconds = (this.props.timeLeftMS / 1000) % 60;\n    const milliseconds = this.props.timeLeftMS % 1000;\n    return (\n      <div className={styles.timer}>\n        {pad(0 | minutes, 2)}:{pad(0 | seconds, 2)}:{pad(milliseconds, 3)}\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import Stopwatch from \"timer-stopwatch\";\n\nconst STATUS = {\n  STOPPED: 0,\n  RUNNING: 1,\n  COMPLETE: 2\n};\n\nclass BombTimer {\n  constructor({ time, tickMS = 1000 / 20, almostDoneMS = 10000, maxTimeLimit }) {\n    this.time = time;\n    this.tickMS = tickMS;\n    this.almostDoneMS = almostDoneMS;\n    this.maxTimeLimit = maxTimeLimit;\n\n    console.log({ time, tickMS, almostDoneMS })\n\n    this._createStopwatch(this.time, this.tickMS, this.almostDoneMS);\n  }\n\n  static EVENTS = {\n    TICK: \"TICK\",\n    ALMOST_DONE: \"ALMOST_DONE\",\n    DONE: \"DONE\"\n  };\n\n  onTick(cb) {\n    this._stopwatch.onTime(cb);\n  }\n\n  unbindTick() {\n    this._stopwatch.removeAllListeners('time');\n  }\n\n  onAlmostDone(cb) {\n    this._stopwatch.onAlmostDone(cb);\n  }\n\n  onDone(cb) {\n    this._stopwatch.onDone(cb);\n  }\n\n  start() {\n    this._stopwatch.start();\n  }\n\n  stop() {\n    this._stopwatch.stop();\n  }\n\n  isRunning() {\n    return this._stopwatch.state === STATUS.RUNNING;\n  }\n\n  isStopped() {\n    return this._stopwatch.state === STATUS.STOPPED;\n  }\n\n  isDone() {\n    return this._stopwatch.state === STATUS.COMPLETE;\n  }\n\n  _createStopwatch(ms, refreshRateMS, almostDoneMS) {\n    this._stopwatch = new Stopwatch(ms, {\n      refreshRateMS,\n      almostDoneMS\n    });\n  }\n\n  get ms() { return this._stopwatch.ms; }\n\n  changeTime(timeDiffMS) {\n    if (this.isDone()) {\n      return;\n    }\n\n    if(this._stopwatch.ms + timeDiffMS >= this.maxTimeLimit){\n      this._stopwatch.reset(this.maxTimeLimit);\n    }\n    \n    const isRunning = this.isRunning();\n\n    if (this._stopwatch.ms + timeDiffMS <= 0) {\n      this.stop();\n      this._stopwatch.emit('done');\n      this._stopwatch.doneFired = true;\n    } else {\n      this._stopwatch.reset(this._stopwatch.ms + timeDiffMS);\n    }\n\n\n    isRunning && this.start();\n  }\n}\n\nexport default BombTimer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"../../Loading\";\nimport AnswerTiles from \"./AnswerTiles\";\nimport OnEnter from \"../../KeyboardListener/OnEnter\";\n\nimport backgroundListener from \"../../CRT/backgroundListener\";\n\nimport Clock from \"../../Clock\";\nimport BombTimer from \"../../lib/BombTimer\";\nimport styles from \"./mainScene.module.scss\";\n\nimport { playHackingTime } from \"../../lib/music\";\nimport { playCorrectAnswerSound, playSkippedQuestionSound, playBeep } from \"../../lib/sounds\";\n\nconst MAX_WRONG_LETTERS = 3;\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.maxWrongLetters = 3;\n\n    this.state = {\n      loading: false,\n      correctAnswerAnimation: false,\n      questionId: null,\n      questionText: null,\n      correctAnswer: null,\n      wrongLettersGiven: 0,\n      timeLeft: this.props.time,\n      correctAnswerReward: this.props.correctAnswerReward,\n      wrongAnswerPenalty: -this.props.wrongAnswerPenalty,\n      skipQuestionPenalty: -this.props.skipQuestionPenalty,\n      timeDiffs: {},\n      maxTimeLimit: this.props.maxTimeLimit,\n      score: 0,\n    };\n\n    this.timer = new BombTimer({ time: this.props.time, maxTimeLimit: this.props.maxTimeLimit });\n  }\n\n  componentWillMount() {\n    playHackingTime();\n    this.tickingSound = setInterval(() => {\n      if (this.timer.isRunning()) {\n        playBeep();\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.timer.unbindTick();\n    clearInterval(this.tickingSound);\n    backgroundListener.setNormal();\n  }\n\n  componentDidMount() {\n    this.loadQuestion();\n    this.timer.onTick(this.tick);\n    this.timer.onDone(this.props.onLose);\n  }\n\n  tick = () => {\n    this.setState({ timeLeft: this.timer.ms });\n\n    if (this.timer.ms > 30 * 1000) {\n      backgroundListener.setNormal();\n    } else if (this.timer.ms > 10 * 1000) {\n      backgroundListener.setWarning();\n    } else {\n      backgroundListener.setDanger();\n    }\n  };\n\n  changeTimeLeft = diff => {\n    this.indicateTimeDiff(diff);\n    this.setState(({ timeLeft: prev }) => {\n      var time = prev + diff;\n      console.log(time);\n      return { timeLeft: time > 0 ? time : 0 };\n    });\n    this.timer.changeTime(diff * 1000);\n  };\n\n  onWrongLetter = () => {\n    var self = this;\n    this.changeTimeLeft(this.state.wrongAnswerPenalty);\n    this.props.onWrongAnswer(this.state.questionId);\n  };\n\n  indicateTimeDiff = diff => {\n    const diffNotificationId = setTimeout(() => {\n      this.removeTimeDiffNotification(diffNotificationId);\n    }, 3000);\n    this.addTimeDiffNotification(diffNotificationId, diff);\n  };\n\n  addTimeDiffNotification = (id, diff) => {\n    this.setState(prevState => {\n      const timeDiffs = { ...prevState.timeDiffs };\n      timeDiffs[id] = diff;\n\n      return {\n        timeDiffs,\n      };\n    });\n  };\n\n  removeTimeDiffNotification = id => {\n    this.setState(prevState => {\n      const timeDiffs = { ...prevState.timeDiffs };\n      delete timeDiffs[id];\n\n      return {\n        timeDiffs,\n      };\n    });\n  };\n\n  onCorrectAnswer = () => {\n    playCorrectAnswerSound();\n    this.timer.stop();\n    this.setState(\n      {\n        loading: true,\n        correctAnswerAnimation: true,\n      },\n      () => {\n        this.props.onCorrectAnswer(this.state.questionId).then(({ timeShift, totalScore }) => {\n          this.changeTimeLeft(timeShift);\n          setTimeout(() => this.loadQuestion(totalScore), 1000);\n        });\n      }\n    );\n  };\n\n  onNoMoreQuestions = () => {\n    this.timer.stop();\n    this.setState(\n      {\n        loading: false,\n        questionId: null,\n        questionText: null,\n        correctAnswer: null,\n        wrongLettersGiven: 0,\n      },\n      () => this.props.onWin()\n    );\n  };\n\n  skipQuestion = () => {\n    this.timer.stop();\n    this.props.onSkipAnswer(this.state.questionId).then(({ timeShift, totalScore }) => {\n      playSkippedQuestionSound();\n      this.changeTimeLeft(timeShift);\n      this.loadQuestion(totalScore);\n    });\n  };\n\n  loadQuestion(totalScore = 0) {\n    this.setState(\n      {\n        loading: true,\n        correctAnswerAnimation: false,\n      },\n      () => {\n        this.timer.stop();\n        this.props\n          .questionGetter()\n          .then(({ id, question, answer, category } = {}) => {\n            this.timer.start();\n\n            return this.setState({\n              questionId: id,\n              questionText: question,\n              categoryName: category,\n              correctAnswer: answer,\n              wrongLettersGiven: 0,\n              loading: false,\n              score: totalScore,\n            });\n          })\n          .catch(error => {\n            if (error.response.status === 400) {\n              var data = error.response.data;\n              if (data.errorCode === 3) {\n                return this.onNoMoreQuestions();\n              }\n            }\n          });\n      }\n    );\n  }\n\n  renderTimeDiffNotifications = () => {\n    return Object.keys(this.state.timeDiffs).map(timeDiffId => {\n      const timeDiff = this.state.timeDiffs[timeDiffId];\n      const style = timeDiff < 0 ? styles.red : styles.blue;\n      const sign = timeDiff < 0 ? \"\" : \"+\";\n      return (\n        <span className={[styles.timeDiff, style].join(\" \")} key={`notification_${timeDiffId}`}>\n          {timeDiff}\n          {\" \" + sign}\n        </span>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.questionId && (\n          <React.Fragment>\n            <div className={styles.clockWrapper}>\n              <Clock timeLeftMS={this.state.timeLeft} />\n              {this.renderTimeDiffNotifications()}\n            </div>\n            <div className={styles.points + \" regular-text\"}>Punkty: {this.state.score}</div>\n\n            <p className={styles.categoryName}>KATEGORIA: {this.state.categoryName}</p>\n            <div className={styles.questionContent}> {this.state.questionText} </div>\n            <AnswerTiles\n              key={`answer_${this.state.questionId}`}\n              correctAnswer={this.state.correctAnswer}\n              onWrongLetter={this.onWrongLetter}\n              onCorrectAnswer={this.onCorrectAnswer}\n            />\n\n            {!this.state.loading && !this.state.correctAnswerAnimation && (\n              <React.Fragment>\n                <p className={styles.description}> Naciśnij ENTER aby pominąć pytanie (Tracisz od razu 5 sekund) </p>\n                <OnEnter callback={this.skipQuestion} />\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n\n        {this.state.loading && <Loading />}\n      </React.Fragment>\n    );\n  }\n\n  static propTypes = {\n    playerName: PropTypes.string.isRequired,\n    sessionId: PropTypes.number.isRequired,\n    onWin: PropTypes.func.isRequired,\n    onLose: PropTypes.func.isRequired,\n    questionGetter: PropTypes.func.isRequired,\n    onCorrectAnswer: PropTypes.func.isRequired,\n    onWrongAnswer: PropTypes.func.isRequired,\n    time: PropTypes.number.isRequired,\n  };\n}\n\nexport default Main;\n","import React from \"react\";\nimport OnKeydown from \"../KeyboardListener/OnKeydown\";\n\nconst happyface = require('../../resources/img/happyface.png');\n\nvar titleStyle = {\n  fontSize: '5rem',\n  marginBotton: '1rem',\n  marginTop: '-1rem',\n}\n\nvar imgStyle = {\n  height: '33rem',\n  marginTop: '2rem'\n}\n\nclass Win extends React.Component {\n\n  skipSceneDisabled = true;\n  onAnyKeyPressed = null;\n\n  constructor(...args) {\n    super(...args);\n  }\n\n\n  componentWillMount() {\n    setTimeout(() => {\n      this.skipSceneDisabled = false;\n    }, 5000)\n  }\n\n  callback = (e) => {\n    if (!this.skipSceneDisabled) {\n      this.props.onAnyKeyPressed();\n    }\n  }\n\n  getPlayerId() {\n    const re = /(?!.*\\/)(.*)$/;\n    return re.exec(this.props.playerId)[0];\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className='regular-text'>\n          <div style={titleStyle}>GRATULACJE</div>\n          <div>UDAŁO CI SIĘ DOTRWAĆ DO KOŃCA I WYCZERPAĆ ZESTAW PYTAŃ</div>\n          <div>NIE WIELU GRACZY ZOBACZY TEN EKRAN</div>\n          <div>Twój wynik: {this.props.points}</div>\n          <div><span>Gracz: {this.props.playerName}</span><span> ID: {this.getPlayerId()}</span></div>\n          <div>Odbierz wydruk z wynikiem</div>\n          <img style={imgStyle} src={happyface} alt=\"happyface\" />\n          <OnKeydown callback={this.callback} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Win;\n","import React from \"react\";\nimport { playTimeEndExplosionSound } from \"../lib/music\";\nimport OnKeydown from \"../KeyboardListener/OnKeydown\";\n\nconst explosionImage = require('../../resources/img/end_explosion.png');\n\n\nvar titleStyle = {\n  fontSize: '5rem',\n  marginBotton: '1rem',\n  marginTop: '-1rem',\n}\n\nvar imgStyle = {\n  height: '35rem',\n  marginTop: '2rem'\n}\n\nclass Lose extends React.Component {\n\n  skipSceneDisabled = true;\n  onAnyKeyPressed = null;\n\n  constructor(...args) {\n    super(...args);\n  }\n\n\n  componentWillMount() {\n    playTimeEndExplosionSound();\n\n    setTimeout(() => {\n      this.skipSceneDisabled = false;\n    }, 5000)\n  }\n\n  callback = (e) => {\n    if (!this.skipSceneDisabled) {\n      this.props.onAnyKeyPressed();\n    }\n  }\n\n  getPlayerId() {\n    const re = /(?!.*\\/)(.*)$/;\n    return re.exec(this.props.playerId)[0];\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className='regular-text'>\n          <div style={titleStyle}>KONIEC CZASU</div>\n          <div>Twój wynik: {this.props.points}</div>\n          <div><span>Gracz: {this.props.playerName}</span><span> ID: {this.getPlayerId()}</span></div>\n          <div>Odbierz wydruk z wynikiem</div>\n          <img style={imgStyle} src={explosionImage} alt=\"Explosion\" />\n          <OnKeydown callback={this.callback} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Lose;\n","import React from \"react\";\nimport Cursor from \"../Cursor\";\n\nimport { playTypingSound } from \"../lib/sounds\";\n\nconst keycode = require(\"keycode\");\n\nclass MultiKeyInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.onKeyPressed);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyPressed);\n  }\n\n  onKeyPressed = (e) => {\n    playTypingSound();\n    this.props.requiredKeyCodes.map((requiredKeyCode) => {\n      if (requiredKeyCode === keycode(e.keyCode)) {\n        this.props.onRequiredKeyPress(keycode(e.keyCode));\n      }\n    });\n  }\n\n  render() {\n    return (\n      <span onKeyDown={event => this.onKeyDown(event)}>\n        <Cursor />\n      </span>\n    );\n  }\n}\n\nexport default MultiKeyInput;\n","import React from \"react\";\nimport MultiKeyInput from \"../MultiKeyInput\";\nimport { playMachineSound } from \"../lib/music\";\n\nconst logo = require('../../resources/img/pggbomb_logo.png');\n\nconst description  = {\n  fontSize: '3rem',\n  marginTop: '1rem'\n}\n\nclass Idle extends React.Component {\n  componentWillMount() {\n    playMachineSound();\n  }\n\n  render() {\n    const { onEnterOrSpacePress } = this.props;\n\n    return (\n      <React.Fragment>\n        <img src={logo} alt='Logo' />\n\n        <div style={description}>\n          NACIŚNIJ ENTER ABY ROZPOCZĄĆ<MultiKeyInput requiredKeyCodes={['enter', 'space']} onRequiredKeyPress={onEnterOrSpacePress} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Idle;\n","import React from \"react\";\nimport OnKeydown from \"../../KeyboardListener/OnKeydown\";\nimport styles from \"./leaderboard.module.scss\";\n\nclass Leaderboard extends React.Component {\n  skipSceneDisabled = true;\n\n  componentWillMount() {\n    setTimeout(() => {\n      this.skipSceneDisabled = false;\n    }, 5000);\n  }\n  callback = e => {\n    if (!this.skipSceneDisabled) {\n      this.props.onAnyKeyPressed();\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className={styles.scoreTitle}>TABLICA WYNIKÓW</div>\n        <div className=\"regular-text\">\n          <ol className={styles.wrapper}>\n            {this.props.leaderBoard.map((playerScore, index) => {\n              return (\n                <li key={index} className={styles.clear}>\n                  <span className={styles.playerName}>\n                    {playerScore.playerName + \" (ID:\" + playerScore.playerId + \")\"}\n                  </span>{\" \"}\n                  <span className={styles.playerScore}> {\"LICZBA PUNKTÓW: \" + playerScore.result}</span>\n                </li>\n              );\n            })}\n          </ol>\n\n          <OnKeydown callback={this.callback} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Leaderboard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SCENES } from \"../consts\";\nimport APIPropType from \"./API.propType\";\nimport IdleTimer from \"react-idle-timer\";\nimport Loading from \"./Loading\";\n\nimport Menu from \"./scenes/Menu\";\nimport Main from \"./scenes/Main\";\nimport Win from \"./scenes/Win\";\nimport Lose from \"./scenes/Lose\";\nimport Idle from \"./scenes/Idle\";\nimport LeaderBoard from \"./scenes/Leaderboard\";\n\nimport backgroundListener from \"./CRT/backgroundListener\";\n\nconst SESSION_TIME = 30000;\nconst IDLE_MAX_TIME = 30 * 1000;\n\nclass Game extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scene: SCENES.MENU,\n      playerName: \"\",\n      sessionId: null,\n      loading: false,\n      leaderBoard: [],\n      errorMessage: \"\",\n      score: 0,\n      sessionTime: SESSION_TIME,\n      idleMaxTime: IDLE_MAX_TIME,\n    };\n\n    this.idleTimer = null;\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      if (!this.idleTimer) {\n        return;\n      }\n      var currentScene = this.state.scene;\n      var idleTime = this.idleTimer.getElapsedTime();\n      if (currentScene == SCENES.MENU || currentScene == SCENES.LEADERBOARD) {\n        if (idleTime > this.state.idleMaxTime) {\n          this.reset();\n        }\n      } else if (currentScene == SCENES.LOSE || currentScene == SCENES.WIN) {\n        if (idleTime > this.state.idleMaxTime) {\n          this.leaderBoard();\n        }\n      } else {\n        this.idleTimer.reset();\n      }\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.scene !== prevProps.scene) {\n      this.idleTimer.reset();\n      backgroundListener.setNormal();\n    }\n  }\n\n  reset = () => {\n    this.setState({\n      scene: SCENES.IDLE,\n      playerName: \"\",\n      sessionId: null,\n      loading: false,\n    });\n    this.idleTimer.reset();\n  };\n\n  leaderBoard = () => {\n    this.setState({ loading: true }, () => {\n      this.props.api.getLeaderboard().then(({ leaderBoard }) => {\n        this.setState({\n          leaderBoard,\n          scene: SCENES.LEADERBOARD,\n          playerName: \"\",\n          sessionId: null,\n          loading: false,\n        });\n      });\n    });\n    this.idleTimer.reset();\n  };\n\n  onNameEntered = playerName => {\n    this.setState({ loading: true, errorMessage: \"\" }, () => {\n      this.props.api\n        .createSession(playerName)\n        .then(\n          ({\n            sessionId,\n            timeLimit,\n            maxTimeLimit,\n            correctAnswerTimeReward,\n            wrongAnswerTimePenalty,\n            skipAnswerTimePenalty,\n          }) => {\n            this.setState({\n              playerName,\n              scene: SCENES.MAIN,\n              sessionId,\n              loading: false,\n              sessionTime: timeLimit * 1000,\n              correctAnswerReward: correctAnswerTimeReward,\n              wrongAnswerPenalty: wrongAnswerTimePenalty,\n              skipAnswerPenalty: skipAnswerTimePenalty,\n              maxTimeLimit: maxTimeLimit * 1000,\n            });\n          }\n        )\n        .catch(error => {\n          if (error.response.status === 400) {\n            var data = error.response.data;\n            this.setState({\n              loading: false,\n              errorMessage: data.errorDesc,\n            });\n          }\n          throw error;\n        });\n    });\n  };\n\n  onWin = score => {\n    this.setState({ loading: true }, () => {\n      this.props.api.saveWinGame({ sessionId: this.state.sessionId, score }).then(({ totalScore }) => {\n        this.setState({ scene: SCENES.WIN, loading: false, score: totalScore });\n      });\n    });\n  };\n\n  onLose = score => {\n    this.setState({ loading: true }, () => {\n      this.props.api.saveLoseGame({ sessionId: this.state.sessionId, score }).then(({ totalScore }) => {\n        this.setState({ scene: SCENES.LOSE, loading: false, score: totalScore });\n      });\n    });\n  };\n\n  onIdleEnterOrSpacePress = button => {\n    if (button === \"space\") {\n      this.leaderBoard();\n    }\n\n    if (button === \"enter\") {\n      this.onEnterPress();\n    }\n  };\n\n  onEnterPress = () => {\n    this.setState({ loading: true }, () => {\n      new Promise(resolve => {\n        setTimeout(() => {\n          this.setState({\n            scene: SCENES.MENU,\n            loading: false,\n          });\n        }, 500);\n      });\n    });\n  };\n\n  onEscapePress = () => {\n    this.setState({ loading: true }, () => {\n      new Promise(resolve => {\n        setTimeout(() => {\n          this.setState({\n            scene: SCENES.IDLE,\n            loading: false,\n          });\n        }, 500);\n      });\n    });\n  };\n\n  onSpacePress = () => {\n    this.setState({ loading: true }, () => {\n      new Promise(resolve => {\n        setTimeout(() => {\n          this.setState({\n            scene: SCENES.LEADERBOARD,\n            loading: false,\n          });\n        }, 500);\n      });\n    });\n  };\n\n  onLoseSceneAnyKeyPress = () => {\n    this.leaderBoard();\n  };\n\n  onWinSceneAnyKeyPress = () => {\n    this.leaderBoard();\n  };\n\n  onLeaderboardSceneAnyKeyPress = () => {\n    this.reset();\n  };\n\n  render() {\n    return (\n      <IdleTimer\n        ref={ref => {\n          this.idleTimer = ref;\n        }}\n        onActive={this.onActive}\n        onIdle={this.onIdle}\n        timeout={this.state.timeout}\n        startOnLoad\n      >\n        <React.Fragment>\n          {this.state.scene === SCENES.WIN && (\n            <Win\n              playerId={this.state.sessionId}\n              playerName={this.state.playerName}\n              points={this.state.score}\n              onAnyKeyPressed={this.onWinSceneAnyKeyPress}\n            />\n          )}\n\n          {this.state.scene === SCENES.LOSE && (\n            <Lose\n              playerId={this.state.sessionId}\n              playerName={this.state.playerName}\n              points={this.state.score}\n              onAnyKeyPressed={this.onLoseSceneAnyKeyPress}\n            />\n          )}\n\n          {this.state.scene === SCENES.MENU && (\n            <Menu\n              onNameEntered={this.onNameEntered}\n              onEscapePress={this.onEscapePress}\n              errorDesc={this.state.errorMessage}\n            />\n          )}\n\n          {this.state.scene === SCENES.MAIN && (\n            <Main\n              playerName={this.state.playerName}\n              sessionId={this.state.sessionId}\n              onWin={this.onWin}\n              onLose={this.onLose}\n              questionGetter={() =>\n                this.props.api.getNextQuestion({\n                  sessionId: this.state.sessionId,\n                })\n              }\n              onCorrectAnswer={questionId =>\n                this.props.api.saveGoodAnswer({\n                  sessionId: this.state.sessionId,\n                  questionId,\n                })\n              }\n              onWrongAnswer={questionId =>\n                this.props.api.saveBadAnswer({\n                  sessionId: this.state.sessionId,\n                  questionId,\n                })\n              }\n              onSkipAnswer={questionId =>\n                this.props.api.skipQuestion({\n                  sessionId: this.state.sessionId,\n                  questionId,\n                })\n              }\n              correctAnswerReward={this.state.correctAnswerReward}\n              wrongAnswerPenalty={this.state.wrongAnswerPenalty}\n              skipQuestionPenalty={this.state.skipAnswerPenalty}\n              time={this.state.sessionTime}\n              maxTimeLimit={this.state.maxTimeLimit}\n            />\n          )}\n\n          {this.state.scene === SCENES.IDLE && <Idle onEnterOrSpacePress={this.onIdleEnterOrSpacePress} />}\n\n          {this.state.scene === SCENES.LEADERBOARD && (\n            <LeaderBoard leaderBoard={this.state.leaderBoard} onAnyKeyPressed={this.onLeaderboardSceneAnyKeyPress} />\n          )}\n\n          {this.state.loading && <Loading />}\n        </React.Fragment>\n      </IdleTimer>\n    );\n  }\n}\n\nGame.propTypes = {\n  api: APIPropType.isRequired,\n};\n\nexport default Game;\n","import React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport styles from \"./Countdown.module.scss\";\nimport { HugeText } from \"components/Text/Text\";\n\nexport default ({ seconds = 3, onFinished = () => {} } = {}) => {\n  const timer = useRef();\n  const [secondsLeft, setSecondsLeft] = useState(seconds);\n  const [finished, setFinished] = useState(false);\n\n  const tick = useCallback(() => {\n    setSecondsLeft(secondsLeft => secondsLeft - 1);\n  }, []);\n\n  useEffect(() => {\n    if (secondsLeft < 0) {\n      setFinished(true);\n    }\n  }, [onFinished, secondsLeft]);\n\n  useEffect(() => {\n    if (finished) {\n      onFinished();\n      clearInterval(timer.current);\n    }\n  }, [finished, onFinished]);\n\n  useEffect(() => {\n    timer.current = setInterval(tick, 1000);\n\n    return () => clearInterval(timer.current);\n  }, [tick]);\n\n  return (\n    <div className={styles.countdown}>\n      <HugeText\n        style={{\n          animationIterationCount: seconds + 1,\n        }}\n        className={styles.number}\n      >\n        {finished ? null : secondsLeft >= 0 ? secondsLeft : null}\n      </HugeText>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport Screen, { ScreenCentered, Background } from \"components/screens/Screen/Screen\";\nimport { BigText, SmallText } from \"components/Text/Text\";\nimport Countdown from \"components/Clock/Countdown\";\nimport UnderConstruction from \"components/screens/UnderConstruction/UnderConstruction\";\n\nimport GAME from \"_OLD/App\";\n\nexport default props => {\n  const [countingdown, setCountingdown] = useState(true);\n\n  const onCountDownDonw = () => setCountingdown(false);\n\n  if (!countingdown) {\n    return (\n      <>\n        <BigText>[To jest stara wersja Gry. Niedługo zostanie odświeżona. :-) ] </BigText>\n        <GAME />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Background />\n      <Screen>\n        <Countdown onFinished={onCountDownDonw} />\n      </Screen>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Jargon } from \"components/Jargon/Jargon\";\nimport Screen, { Background } from \"../Screen/Screen\";\nimport { NormalText, BigText, HugeText } from \"components/Text/Text\";\nimport { EscHandler } from \"components/Input/Keyboard/KeyboardEventHandler\";\n\nexport default ({ title, history, ...rest } = {}) => (\n  <>\n    <EscHandler onKeyEvent={() => history.push(\"/\")} />\n    <Background />\n    <Screen>\n      <BigText>Screen {title} is not ready</BigText>\n      <HugeText>Press [ESC] to return</HugeText>\n      <pre>{JSON.stringify(rest, null, 2)}</pre>\n      <div\n        style={{\n          position: \"relative\",\n          left: \"20px\",\n          opacity: 0.5,\n        }}\n      >\n        <Jargon maxLines={10} />{\" \"}\n      </div>\n    </Screen>\n  </>\n);\n"],"sourceRoot":""}