{"version":3,"sources":["utils/jargon.js","components/Typing/Typing.jsx","components/Jargon/Jargon.jsx","components/screens/UnderConstruction/UnderConstruction.jsx"],"names":["JargonGenerator","CONSTANTS","PROMPT","RULE_COMMAND","RULE_ELEMENT","ITEM_REGISTER","ITEM_SYSTEM","ITEM_TRACE","ITEM_MIPS","ITEM_SWITCH","NUMBER_BINARY","NUMBER_HEX","NUMBER_INT","NUMBER_ALPHA","NUMBER_PER","JOINER","OPENER","TERMINATOR","PLACEHOLDERS","JARGON","Init","this","push","initRuleset","Cmd","result","commandTemplate","forEach","item","index","replaceBy","bind","ruleset","_this","commandExpansions","filter","r","indexOf","RND","rarr","elementExpansions","regex","replace","RegExp","x","swap","placeholder","source","register","system","trace","mip","rbin","rhex","r2n","ralpha","rper","rbool","switch","systemType","template","int","alpha","range","rarg","t","s","prefix","r36","toLowerCase","trimStart","nlogn","n","Math","log","rint","min","max","arguments","length","floor","random","abs","rnd","apply","rdec","digits","toFixed","a","b","undefined","array","pow","toBinary","toString","toHex","i","String","fromCharCode","charCodeAt","rnorm","mean","sd","_mean","_sd","value","padStart","Typing","_ref","children","_ref$onTypingDone","onTypingDone","react_default","createElement","Typist_default","avgTypingDelay","cursor","show","Jargon","_ref$maxLines","maxLines","generator","useRef","_useState","useState","_useState2","Object","slicedToArray","commands","setCommands","_useState3","_useState4","typing","setTyping","useEffect","current","destroy","timeout","remaining","delay","startTime","_ref$onCommand","onCommand","_ref$speed","speed","started","paused","triggerAndSchedlue","Date","now","cmd","setTimeout","start","clearTimeout","pause","resume","createGenerator","newCmd","concat","toConsumableArray","slice","map","cmdTxt","key","Typing_Typing","__webpack_exports__","title","history","rest","objectWithoutProperties","KeyboardEventHandler","onKeyEvent","Screen","Text","JSON","stringify","style","position","left","opacity","Jargon_Jargon"],"mappings":"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","file":"static/js/screen-20--UnderConstruction-UnderConstruction.0b4be204.chunk.js","sourcesContent":["/* @see https://codepen.io/patrick-heney/pen/wmPRZO */\n////////////////////////////\n////  JARGON GENERATOR  ////\n////////////////////////////\n\nvar JargonGenerator = {\n  CONSTANTS: {\n    PROMPT: \"> \",\n    RULE_COMMAND: \"{Command}\",\n    RULE_ELEMENT: \"{Element}\",\n    ITEM_REGISTER: \"{Register}\",\n    ITEM_SYSTEM: \"{System}\",\n    ITEM_TRACE: \"{Trace}\",\n    ITEM_MIPS: \"{Mips}\",\n    ITEM_SWITCH: \"{switch}\",\n    NUMBER_BINARY: \"{binary}\",\n    NUMBER_HEX: \"{hex}\",\n    NUMBER_INT: \"{integer}\",\n    NUMBER_ALPHA: \"{alpha}\",\n    NUMBER_PER: \"{percent}\",\n    JOINER: \"{Join}\",\n    OPENER: \"{Open}\",\n    TERMINATOR: \"{Terminate}\",\n    PLACEHOLDERS: [],\n  },\n\n  //  Jargon library\n  JARGON: {\n    OPENER: [\n      \"FORCE\",\n      \"HOLD\",\n      \"STATUS\",\n      \"FLUSH\",\n      \"RECALL\",\n      \"SPLIT\",\n      \"RELEASE\",\n      \"LOAD\",\n      \"CONFIG\",\n      \"RECYCLE\",\n      \"DUMP\",\n      \"INVERT\",\n      \"RELAY\",\n      \"ROUTE\",\n      \"LINK\",\n      \"TRACK\",\n      \"REQUEST\",\n    ],\n    JOINER: [\n      \"SHIFT\",\n      \"REDIRECT\",\n      \"SUB\",\n      \"FLUSH\",\n      \"SPLIT\",\n      \">\",\n      \">>\",\n      \"&\",\n      \"|\",\n      \"::\",\n      \"->\",\n      \"<-\",\n      \"SWAP\",\n      \"IN\",\n      \"CONNECT\",\n      \"JOIN\",\n      \"AS\",\n      \"TO\",\n      \"PUSH\",\n      \"PULL\",\n      \"TRY\",\n      \"MERGE\",\n      \"TRACK\",\n      \"SWAP\",\n    ],\n    TERMINATOR: [\n      \"OK\",\n      \"ACK\",\n      \"SYN\",\n      \"ACCEPT\",\n      \"REJECT\",\n      \"MONITOR\",\n      \"PASS\",\n      \"FAIL\",\n      \"WARN\",\n      \"OUT\",\n      \"RETRY\",\n      \"RESET\",\n      \"SCATTER\",\n      \"CONTINUE\",\n      \"WAIT\",\n      \"DOWN\",\n      \"RELAY\",\n      \"PEND\",\n      \"INIT\",\n      \"PRIME\",\n    ],\n  },\n\n  Init: function() {\n    this.CONSTANTS.PLACEHOLDERS = [\n      this.CONSTANTS.ITEM_REGISTER,\n      this.CONSTANTS.ITEM_SYSTEM,\n      this.CONSTANTS.ITEM_TRACE,\n      this.CONSTANTS.ITEM_MIPS,\n      this.CONSTANTS.JOINER,\n      this.CONSTANTS.OPENER,\n      this.CONSTANTS.TERMINATOR,\n      this.CONSTANTS.NUMBER_BINARY,\n      this.CONSTANTS.NUMBER_HEX,\n      this.CONSTANTS.NUMBER_INT,\n      this.CONSTANTS.NUMBER_ALPHA,\n      this.CONSTANTS.NUMBER_PER,\n      this.CONSTANTS.ITEM_SWITCH,\n    ];\n\n    this.JARGON.TERMINATOR.push(\"FRAGMENT/\" + this.CONSTANTS.NUMBER_HEX);\n    this.JARGON.TERMINATOR.push(\"DELAY \" + this.CONSTANTS.NUMBER_INT + \"000\");\n    this.JARGON.TERMINATOR.push(\"DUMP [\" + this.CONSTANTS.NUMBER_HEX + \", \" + this.CONSTANTS.NUMBER_HEX + \"]\");\n    this.JARGON.TERMINATOR.push(this.CONSTANTS.NUMBER_PER + \"%\");\n\n    this.initRuleset();\n  },\n\n  //  Returns a Jargon command string\n  Cmd: function() {\n    var result = this.commandTemplate();\n    this.CONSTANTS.PLACEHOLDERS.forEach(\n      function(item, index) {\n        result = this.replaceBy(item, result);\n      }.bind(this)\n    );\n    return result;\n  },\n\n  //  {Open}, {J}, {End}, {Item}\n  //  {Element} -> {S}, {R}, {T}\n  ruleset: [],\n\n  initRuleset: function() {\n    this.ruleset = [\n      //  exit conditions\n      [this.CONSTANTS.RULE_ELEMENT, this.CONSTANTS.ITEM_SYSTEM],\n      [this.CONSTANTS.RULE_ELEMENT, this.CONSTANTS.ITEM_REGISTER],\n      [this.CONSTANTS.RULE_ELEMENT, this.CONSTANTS.ITEM_TRACE],\n      [this.CONSTANTS.RULE_ELEMENT, this.CONSTANTS.ITEM_MIPS],\n\n      //  Command expansion rules\n      [this.CONSTANTS.RULE_COMMAND, this.CONSTANTS.RULE_ELEMENT],\n      [this.CONSTANTS.RULE_COMMAND, this.CONSTANTS.RULE_ELEMENT + \" \" + this.CONSTANTS.ITEM_SWITCH],\n      [this.CONSTANTS.RULE_COMMAND, this.CONSTANTS.RULE_ELEMENT + \" \" + this.CONSTANTS.TERMINATOR],\n      [this.CONSTANTS.RULE_COMMAND, this.CONSTANTS.RULE_ELEMENT + \" \" + this.CONSTANTS.TERMINATOR],\n      [this.CONSTANTS.RULE_COMMAND, this.CONSTANTS.OPENER + \" \" + this.CONSTANTS.RULE_ELEMENT],\n      [this.CONSTANTS.RULE_COMMAND, this.CONSTANTS.OPENER + \" \" + this.CONSTANTS.RULE_ELEMENT],\n      [\n        this.CONSTANTS.RULE_COMMAND,\n        this.CONSTANTS.OPENER + \" \" + this.CONSTANTS.RULE_ELEMENT + \" \" + this.CONSTANTS.TERMINATOR,\n      ],\n      [this.CONSTANTS.RULE_COMMAND, this.CONSTANTS.OPENER + \" \" + this.CONSTANTS.TERMINATOR],\n\n      //  Element expansion rules\n      [\n        this.CONSTANTS.RULE_ELEMENT,\n        this.CONSTANTS.RULE_ELEMENT + \" \" + this.CONSTANTS.JOINER + \" \" + this.CONSTANTS.RULE_ELEMENT,\n      ],\n    ];\n  },\n\n  //  Returns a jargon template, e.g.,\n  //  \"\"{Open} {S} {J} {R} {T} {Terminate}\"\"\n  commandTemplate: function() {\n    var result = this.CONSTANTS.RULE_COMMAND;\n\n    //  Get all command expansions\n    var commandExpansions = this.ruleset.filter(r => {\n      return r[0].indexOf(this.CONSTANTS.RULE_COMMAND) > -1;\n    });\n\n    //  Select a random command exansion\n    result = this.RND.rarr(commandExpansions)[1];\n\n    //  Get all element expansions\n    var elementExpansions = this.ruleset.filter(r => {\n      return r[0].indexOf(this.CONSTANTS.RULE_ELEMENT) > -1;\n    });\n\n    //  Process the result template.\n    //  Iteratively replace element symbols using the expansions.\n    //  Continue until all elements symbols are replaced.\n    while (result.indexOf(this.CONSTANTS.RULE_ELEMENT) > -1) {\n      var regex = \"(?:.*?\" + this.CONSTANTS.RULE_ELEMENT + \")\";\n      result = result.replace(\n        RegExp(regex),\n        function(x) {\n          var swap = this.RND.rarr(elementExpansions)[1];\n          return x.replace(RegExp(this.CONSTANTS.RULE_ELEMENT), swap);\n        }.bind(this)\n      );\n    }\n\n    return result;\n  },\n\n  //  Replaces all items symbols in the source\n  //  with a randomly generated item.\n  replaceBy: function(placeholder, source) {\n    if (source.indexOf(placeholder) === -1) {\n      return source;\n    }\n\n    while (source.indexOf(placeholder) > -1) {\n      var regex = \"(?:.*?\" + placeholder + \")\";\n      source = source.replace(\n        RegExp(regex),\n        function(x) {\n          var swap = \"!!\";\n          switch (placeholder) {\n            case this.CONSTANTS.ITEM_REGISTER:\n              swap = this.register();\n              break;\n            case this.CONSTANTS.ITEM_SYSTEM:\n              swap = this.system();\n              break;\n            case this.CONSTANTS.ITEM_TRACE:\n              swap = this.trace();\n              break;\n            case this.CONSTANTS.ITEM_MIPS:\n              swap = this.mip();\n              break;\n            case this.CONSTANTS.JOINER:\n              swap = this.RND.rarr(this.JARGON.JOINER);\n              break;\n            case this.CONSTANTS.OPENER:\n              swap = this.RND.rarr(this.JARGON.OPENER);\n              break;\n            case this.CONSTANTS.TERMINATOR:\n              swap = this.RND.rarr(this.JARGON.TERMINATOR);\n              break;\n            case this.CONSTANTS.NUMBER_BINARY:\n              swap = this.RND.rbin();\n              break;\n            case this.CONSTANTS.NUMBER_HEX:\n              swap = this.RND.rhex();\n              break;\n            case this.CONSTANTS.NUMBER_INT:\n              swap = this.RND.r2n();\n              break;\n            case this.CONSTANTS.NUMBER_ALPHA:\n              swap = this.RND.ralpha();\n              break;\n            case this.CONSTANTS.NUMBER_PER:\n              swap = this.RND.rper(1);\n              break;\n            case this.CONSTANTS.ITEM_SWITCH:\n              swap = this.RND.rbool(this.switch());\n              break;\n          }\n          return x.replace(RegExp(placeholder), swap);\n        }.bind(this)\n      );\n    }\n    return source;\n  },\n\n  ////  GENERATORS  ////\n\n  trace: function() {\n    var prefix = [\"back\", \"reverse-\", \"!\", \"\"];\n    var template = \"trace-{opt}\";\n    var opts = [\"on\", \"off\", \"pause\", \"resume\", \"cancel\", \"log\", \"commit\", \"reject\", \"bypass\", \"maint\"];\n    return this.RND.rarr(prefix) + template.replace(\"{opt}\", this.RND.rarr(opts));\n  },\n\n  register: function() {\n    return this.RND.rbool(\"de\", \"\") + \"reg[\" + this.CONSTANTS.NUMBER_HEX + \"]\";\n  },\n\n  system: function() {\n    var systemType = [\n      \"system\",\n      \"core\",\n      \"accelerator\",\n      \"back-scatter\",\n      \"receiver\",\n      \"rtr.\" + this.CONSTANTS.NUMBER_INT,\n      \"nucl-\" + this.CONSTANTS.NUMBER_ALPHA + \".\" + this.CONSTANTS.NUMBER_ALPHA,\n      \"rad\" + this.CONSTANTS.NUMBER_INT + \".\" + this.CONSTANTS.NUMBER_ALPHA,\n      \"pack\",\n      \"bat:\" + this.CONSTANTS.NUMBER_HEX,\n      \"stabilizer\",\n      \"sector\",\n      \"cycle\",\n      \"OS\" + this.CONSTANTS.NUMBER_HEX,\n      \"plot\",\n      \"gateway\",\n      \"interface\",\n      \"adapt\",\n    ];\n    var template = this.RND.rarr(systemType);\n\n    if (this.RND.rbool()) {\n      template = \"{prefix}\" + template;\n    }\n\n    if (this.RND.rbool()) {\n      var int = this.CONSTANTS.NUMBER_INT;\n      var alpha = this.CONSTANTS.NUMBER_INT + this.CONSTANTS.NUMBER_ALPHA;\n      var range = this.CONSTANTS.NUMBER_INT + \"-\" + this.CONSTANTS.NUMBER_INT;\n      template += \" \" + this.RND.rarg(int, alpha, range);\n    }\n\n    if (this.RND.rbool()) {\n      template += \" ({status})\";\n    }\n\n    var t = this.RND.rarg(\"sub\", \"super-\", \"backup-\", \"aux-\", \"remote-\");\n    var s = this.RND.rarg(\"ONLINE\", \"OFFLINE\", \"UNK\");\n\n    return template.replace(\"{prefix}\", t).replace(\"{status}\", s);\n  },\n\n  mip: function() {\n    var prefix = [\"MiPS\", this.CONSTANTS.NUMBER_ALPHA + \"-MEM\", \"CeLL\"];\n    return this.RND.rarr(prefix) + \" (\" + this.CONSTANTS.NUMBER_BINARY + \")\";\n  },\n\n  switch: function() {\n    var result = \"\";\n    do {\n      result += \" /\" + this.RND.r36(this.RND.rarg(1, 1, 1, 1, 1, 2, 2, 3)).toLowerCase();\n    } while (this.RND.rbool());\n    return result.trimStart();\n  },\n\n  ////  HELPERS   ////\n\n  RND: {\n    //  Returns n * log n\n    nlogn: function(n) {\n      return n * Math.log(n);\n    },\n\n    //  Random integer between min and max\n    //  Random integer between 0 and min\n    rint: function(min, max) {\n      if (arguments.length === 1) {\n        max = 0;\n      }\n      return Math.min(min, max) + Math.floor(Math.random() * Math.abs(min - max));\n    },\n\n    //  Backward compatility\n    //  Calls rint(min,max)\n    rnd: function(min, max) {\n      return this.rint.apply(null, arguments);\n    },\n\n    //  Random float between min and max\n    //  Random float between 0 and min\n    //  Random float between 0 and 1\n    rdec: function(min, max) {\n      if (arguments.length < 2) {\n        max = 0;\n      }\n      if (arguments.length < 1) {\n        min = 1;\n      }\n      return Math.min(min, max) + Math.random() * Math.abs(min - max);\n    },\n\n    rper: function(digits) {\n      if (arguments.length == 0) {\n        digits = 1;\n      }\n      return (Math.random() * 100).toFixed(digits);\n    },\n\n    //  Random boolean value (true/false)\n    //  Random selection of the two parameterse (a/b)\n    rbool: function(a, b) {\n      if (arguments.length > 0) {\n        if (b === undefined) {\n          b = \"\";\n        }\n        return this.rbool() ? a : b;\n      }\n      return this.rint(0, 2) === 0;\n    },\n\n    //  Random element from the array\n    rarr: function(array) {\n      return array[this.rint(0, array.length)];\n    },\n\n    rarg: function() {\n      if (arguments === undefined || arguments.length === 0) {\n        return null;\n      }\n      var index = this.rint(arguments.length);\n      return arguments[index];\n    },\n\n    //  Random binary number from 0 to value\n    //  Random binary number from 0 to 256 (0 to 11111111)\n    //  Pad result to indicated digits\n    rbin: function(max, digits) {\n      if (arguments.length < 2) {\n        digits = 8;\n      }\n      if (arguments.length < 1) {\n        max = Math.pow(2, digits);\n      }\n      var result = this.rint(0, max);\n      return this.toBinary(result, digits);\n    },\n\n    //  Retruns 2 raised to the power of (random value from 0 to max)\n    r2n: function(max) {\n      if (arguments.length === 0) {\n        max = 8;\n      }\n      return Math.pow(2, this.rnd(0, max)).toString();\n    },\n\n    //  Random hex number from 0 to value\n    //  Random hex number from 0 to 256 (0x0000 to 0x0100)\n    //  Pad result to indicated digits\n    rhex: function(max, digits) {\n      if (arguments.length < 2) {\n        digits = 2;\n      }\n      if (arguments.length < 1) {\n        max = 256;\n      }\n      var result = this.rint(0, max);\n      return this.toHex(result, digits);\n    },\n\n    //  Random alpha string of length n\n    ralpha: function(n) {\n      if (!n) {\n        n = 1;\n      }\n      var result = \"\";\n      for (var i = 0; i < n; i++) {\n        result += String.fromCharCode(\"A\".charCodeAt(0) + this.rnd(0, 26));\n      }\n      return result;\n    },\n\n    r36: function(n) {\n      if (!n) {\n        n = 1;\n      }\n      var result = \"\";\n      for (var i = 0; i < n; i++) {\n        var r = this.rint(36);\n        if (r < 26) {\n          result += String.fromCharCode(\"A\".charCodeAt(0) + r);\n        } else {\n          result += r - 26;\n        }\n      }\n      return result;\n    },\n\n    rnorm: function(mean, sd) {\n      var fidelity = 15;\n      var result = 0;\n      for (var i = 0; i < fidelity; i++) {\n        result += this.rdec(-1, 1);\n      }\n      result /= fidelity;\n\n      var _mean = 0,\n        _sd = 1;\n\n      if (arguments.length > 0) {\n        _mean = mean;\n      }\n\n      if (arguments.length > 1) {\n        _sd = sd;\n      }\n\n      return result * _sd + _mean;\n    },\n\n    //  Converts the parameter (assumed to be base 10 number)\n    //  to a binary number and pads length to digits.\n    toBinary: function(value, digits) {\n      if (!digits) {\n        digits = 0;\n      }\n      return value.toString(2).padStart(digits, 0);\n    },\n\n    //  Converts the parameter (assumed to be base 10 number)\n    //  to a hexadecimal number and pads length to digits.\n    toHex: function(value, digits) {\n      if (!digits) {\n        digits = 4;\n      }\n      return \"0x\" + value.toString(16).padStart(digits, 0);\n    },\n  },\n};\n\nexport const createGenerator = ({ onCommand = () => {}, speed = 1 }) => {\n  JargonGenerator.Init();\n  let timeout;\n  let remaining;\n  let delay;\n  let startTime;\n  let started = false;\n  let paused = false;\n\n  const triggerAndSchedlue = () => {\n    startTime = Date.now();\n    const cmd = JargonGenerator.Cmd();\n    onCommand(JargonGenerator.CONSTANTS.PROMPT + cmd);\n    delay =\n      (1 / (speed !== 0 ? speed : 0.00000001)) *\n      JargonGenerator.RND.rnd(2, Math.max(2.5, JargonGenerator.RND.nlogn(cmd.length))) *\n      7.5;\n    timeout = setTimeout(triggerAndSchedlue, delay);\n  };\n\n  const destroy = () => clearTimeout(timeout);\n  const start = () => {\n    started = true;\n    triggerAndSchedlue();\n  };\n\n  const pause = () => {\n    if (!started) {\n      return;\n    }\n    paused = true;\n    clearTimeout(timeout);\n    remaining = startTime + delay - Date.now();\n  };\n\n  const resume = () => {\n    if (!paused) {\n      return;\n    }\n    paused = false;\n    timeout = setTimeout(triggerAndSchedlue, remaining);\n  };\n\n  return {\n    start,\n    destroy,\n    pause,\n    resume,\n  };\n};\n","import React from \"react\";\nimport Typist from \"react-typist\";\n\nexport const Typing = ({ children, onTypingDone = () => {} } = {}) => (\n  <Typist avgTypingDelay={5} cursor={{ show: false }} onTypingDone={onTypingDone}>\n    {children}\n  </Typist>\n);\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { createGenerator } from \"utils/jargon\";\nimport { Typing } from \"components/Typing/Typing\";\n\nexport const Jargon = ({ maxLines = 30 }) => {\n  const generator = useRef();\n  const [commands, setCommands] = useState([]);\n  const [typing, setTyping] = useState(false);\n\n  useEffect(() => {\n    generator.current && generator.current.destroy();\n    const onCommand = newCmd => {\n      setCommands(commands => [...commands, newCmd].slice(-maxLines));\n      setTyping(true);\n    };\n    generator.current = createGenerator({\n      onCommand,\n      speed: 1.2,\n    });\n\n    generator.current.start();\n\n    return () => generator.current.destroy();\n  }, [maxLines]);\n\n  useEffect(() => {\n    if (generator.current) {\n      if (typing) {\n        generator.current.pause();\n      } else {\n        generator.current.resume();\n      }\n    }\n  }, [typing]);\n\n  return (\n    <div>\n      {commands.map(cmdTxt => (\n        <div key={`command-${cmdTxt}`}>\n          <Typing onTypingDone={() => setTyping(false)}>{cmdTxt}</Typing>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Jargon } from \"components/Jargon/Jargon\";\nimport Screen, { Background } from \"../Screen/Screen\";\nimport { NormalText, BigText, HugeText } from \"components/Text/Text\";\nimport { EscHandler } from \"components/Input/Keyboard/KeyboardEventHandler\";\n\nexport default ({ title, history, ...rest } = {}) => (\n  <EscHandler onKeyEvent={() => history.push(\"/\")}>\n    <Background />\n    <Screen>\n      <BigText>Screen {title} is not ready</BigText>\n      <HugeText>Press [ESC] to return</HugeText>\n      <pre>{JSON.stringify(rest, null, 2)}</pre>\n      <div\n        style={{\n          position: \"relative\",\n          left: \"20px\",\n          opacity: 0.5,\n        }}\n      >\n        <Jargon maxLines={10} />{\" \"}\n      </div>\n    </Screen>\n  </EscHandler>\n);\n"],"sourceRoot":""}